import { useEffect, useRef, useState } from "react";
import VectorLayer from "ol/layer/Vector";
import VectorSource from "ol/source/Vector";
import GeoJSON from "ol/format/GeoJSON";
import { fromLonLat } from "ol/proj";
import { AZERBAIJAN_CENTER, AZERBAIJAN_ZOOM, useMap } from "../../context/MapContext"; 

export const MapPreview = ({ geojsonData }: { geojsonData: any }) => {
  const { mapRef, isMapReady, mapInstance } = useMap(); // ‚úÖ –ü–æ–ª—É—á–∞–µ–º mapRef –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const vectorLayerRef = useRef<VectorLayer | null>(null);

  const MAX_ZOOM = 18;

  useEffect(() => {
    if (!isMapReady || !mapInstance.current) return;

    if (!geojsonData || !geojsonData.features?.length) {
      console.log("üóë –û—á–∏—â–∞–µ–º –∫–∞—Ä—Ç—É, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω...");
      if (vectorLayerRef.current) {
        mapInstance.current.removeLayer(vectorLayerRef.current);
        vectorLayerRef.current = null;
      }
      mapInstance.current?.getView()?.animate({
        center: fromLonLat(AZERBAIJAN_CENTER),
        zoom: AZERBAIJAN_ZOOM,
        duration: 800,
      });
      return;
    }

    console.log("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∫–∞—Ä—Ç—É...", geojsonData);

    try {
      const vectorSource = new VectorSource({
        features: new GeoJSON().readFeatures(geojsonData, {
          featureProjection: "EPSG:3857",
        }),
      });

      const vectorLayer = new VectorLayer({
        source: vectorSource,
      });

      if (vectorLayerRef.current) {
        mapInstance.current.removeLayer(vectorLayerRef.current);
        console.log("üóë –£–¥–∞–ª—ë–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–æ–π —Å –ø–æ–ª–∏–≥–æ–Ω–∞–º–∏");
      }

      mapInstance.current.addLayer(vectorLayer);
      vectorLayerRef.current = vectorLayer;

      const extent = vectorSource.getExtent();
      if (extent && extent[0] !== Infinity) {
        console.log("üîÑ –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–º–µ–Ω—ã —Ñ–∞–π–ª–∞...");
        mapInstance.current.getView()?.fit(extent, {
          padding: [10, 10, 10, 10],
          maxZoom: MAX_ZOOM,
          duration: 1000,
        });

        console.log("‚úÖ –ö–∞—Ä—Ç–∞ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∞ –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º");
      } else {
        console.warn("‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É: –ø—É—Å—Ç–æ–π extent.");
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ GeoJSON:", error);
    }
  }, [geojsonData, isMapReady]);

  return (
    <div
      ref={mapRef}
      className="w-full h-96 border border-gray-600 rounded-lg"
      style={{ backgroundColor: "lightgray", height: "100%", width: "100%" }}
    />
  );
};