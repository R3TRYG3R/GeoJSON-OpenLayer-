import { JSX } from "react";
import { useSelectedFeature } from "../../context/SelectedFeatureContext";
import { Point, LineString, Polygon } from "ol/geom";
import { toLonLat } from "ol/proj"; // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç

export const FeatureTable = () => {
  const { selectedFeature } = useSelectedFeature();

  if (!selectedFeature) {
    return <p className="text-gray-500">–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –Ω–∞ –∫–∞—Ä—Ç–µ</p>;
  }

  // ‚úÖ –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
  const properties = selectedFeature.getProperties();

  // ‚úÖ –ò–∑–≤–ª–µ–∫–∞–µ–º –≥–µ–æ–º–µ—Ç—Ä–∏—é (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
  const geometry = selectedFeature.getGeometry();
  let coordinates: string | JSX.Element | null = null;
  let geometryType = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ";

  // ‚úÖ –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ GeoJSON
  const isGeoJSON = !properties.latitude && !properties.longitude;

  if (geometry) {
    geometryType = geometry.getType();

    try {
      if (geometry instanceof Point) {
        // ‚úÖ –¢–æ—á–∫–∞ (Point)
        const coord = toLonLat(geometry.getCoordinates()); // üìå –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —à–∏—Ä–æ—Ç—É-–¥–æ–ª–≥–æ—Ç—É
        coordinates = isGeoJSON
          ? `üìç ${coord[1]}, ${coord[0]}`
          : null;
      } else if (geometry instanceof LineString) {
        // ‚úÖ –õ–∏–Ω–∏—è (LineString) - —Å–ø–∏—Å–æ–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        coordinates = isGeoJSON ? (
          <ul className="mt-2 text-sm">
            {geometry.getCoordinates().map((coord, i) => {
              const [lon, lat] = toLonLat(coord); // üìå –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
              return (
                <li key={i} className="text-gray-700">
                  {`üìç ${lat}, ${lon}`}
                </li>
              );
            })}
          </ul>
        ) : null;
      } else if (geometry instanceof Polygon) {
        // ‚úÖ –ü–æ–ª–∏–≥–æ–Ω (Polygon) - —Å–ø–∏—Å–æ–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ–ª—å—Ü–∞
        coordinates = isGeoJSON ? (
          <ul className="mt-2 text-sm">
            {geometry.getCoordinates()[0]?.map((coord, i) => {
              const [lon, lat] = toLonLat(coord); // üìå –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
              return (
                <li key={i} className="text-gray-700">
                  {`üìç ${lat}, ${lon}`}
                </li>
              );
            })}
          </ul>
        ) : null;
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:", error);
      coordinates = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç";
    }
  }

  return (
    <div className="overflow-x-auto mt-4 border rounded-lg">
      <table className="min-w-full border-collapse border border-gray-300">
        <thead>
          <tr className="bg-gray-100">
            <th className="border border-gray-300 px-4 py-2">–°–≤–æ–π—Å—Ç–≤–æ</th>
            <th className="border border-gray-300 px-4 py-2">–ó–Ω–∞—á–µ–Ω–∏–µ</th>
          </tr>
        </thead>
        <tbody>
          {/* ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –≥–µ–æ–º–µ—Ç—Ä–∏–∏ (–û–¥–∏–Ω —Ä–∞–∑) */}
          <tr className="border-t border-gray-300">
            <td className="border border-gray-300 px-4 py-2 font-bold">–¢–∏–ø –≥–µ–æ–º–µ—Ç—Ä–∏–∏</td>
            <td className="border border-gray-300 px-4 py-2">{geometryType}</td>
          </tr>
          
          {/* ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞, –∫—Ä–æ–º–µ geometry */}
          {Object.entries(properties)
                  .filter(([key]) => key !== "geometry" && key !== "geometryType") // –ò—Å–∫–ª—é—á–∞–µ–º geometryType
                  .map(([key, value]) => (
              <tr key={key} className="border-t border-gray-300">
                <td className="border border-gray-300 px-4 py-2">{key}</td>
                <td className="border border-gray-300 px-4 py-2">{String(value)}</td>
              </tr>
            ))}

          {/* ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —ç—Ç–æ GeoJSON */}
          {isGeoJSON && coordinates && (
            <tr className="border-t border-gray-300">
              <td className="border border-gray-300 px-4 py-2 font-bold">–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã</td>
              <td className="border border-gray-300 px-4 py-2">{coordinates}</td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
};