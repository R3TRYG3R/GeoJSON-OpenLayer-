import { useRef, useState } from "react";
import { FileUpload } from "../../features/FileUpload/FileUpload";
import { MapPreview } from "../../widgets/MapPreview/MapPreview";
import { FeatureTable } from "../../widgets/FeatureTable/FeatureTable";
import { useSelectedFeature } from "../../context/SelectedFeatureContext"; // ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç

export const ImportPage = () => {
  const [parsedData, setParsedData] = useState<any | null>(null);
  const inputRef = useRef<HTMLInputElement>(null!);
  const { setSelectedFeature } = useSelectedFeature(); // ‚úÖ –î–æ—Å—Ç–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è

  const handleFileParsed = (data: any) => {
    try {
      if (!data || !data.features || !Array.isArray(data.features)) {
        throw new Error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –û–∂–∏–¥–∞–ª—Å—è GeoJSON.");
      }
      console.log("üì• –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ ImportPage:", data);
      setParsedData(data);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ ImportPage:", error);
    }
  };

  const handleClearMap = () => {
    console.log("üóë –û—á–∏—â–∞–µ–º –∫–∞—Ä—Ç—É –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ...");
    setParsedData(null);
    setSelectedFeature(null); // ‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–∞—Ä—Ç—ã –æ—á–∏—â–∞–µ—Ç—Å—è –∏ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç

    if (inputRef.current) {
      inputRef.current.value = "";
    }
  };

  return (
    <div className="p-4">
      <h1 className="text-2xl font-bold mb-4">–ò–º–ø–æ—Ä—Ç</h1>
      <FileUpload onFileParsed={handleFileParsed} inputRef={inputRef} />

      <button
        onClick={handleClearMap}
        className="mt-4 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600"
      >
        –û—á–∏—Å—Ç–∏—Ç—å –∫–∞—Ä—Ç—É
      </button>

      <h2 className="text-lg font-semibold mt-4">–ü–æ–∫–∞–∑</h2>
      <div
        style={{
          width: "100%",
          height: "500px",
          minHeight: "500px",
          display: "flex",
          alignItems: "stretch",
          justifyContent: "center",
          backgroundColor: "lightgray",
          border: "2px solid red",
        }}
      >
        <MapPreview geojsonData={parsedData} />
      </div>

      <h2 className="text-lg font-semibold mt-4">–¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö</h2>
      <FeatureTable />
    </div>
  );
};